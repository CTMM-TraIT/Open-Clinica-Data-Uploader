buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'no.nils:wsdl2java:0.10'
    }
}

apply plugin: 'no.nils.wsdl2java'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: "jacoco"

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

wsdl2javaExt {
    cxfVersion = "2.5.1"
    deleteGeneratedSourcesOnClean = true
}

wsdl2java {
    generatedWsdlDir = file("src/main/generated")  // target directory for generated source coude
    wsdlDir = file("src/main/wsdl")
    wsdlsToGenerate = [
            ['src/main/wsdl/studySubjectWsdl.wsdl'],
            ['src/main/wsdl/studyWsdl.wsdl'],
            ['src/main/wsdl/eventWsdl.wsdl'],
            ['src/main/wsdl/studyEventDefinitionWsdl.wsdl'],
            ['src/main/wsdl/dataWsdl.wsdl'],

    ]
}


ext {
    protobufOutputDir = file("src/main/generated")
}

idea.module {
    excludeDirs -= file("$buildDir")
    sourceDirs += protobufOutputDir
}

war {
    baseName = 'ocdu'
    version = '0.0.1'
}

jar {
    baseName = 'ocdu'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.session:spring-session')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-ws')
    compile('postgresql:postgresql:9.1-901-1.jdbc4')
    compile("org.springframework.ws:spring-ws-core")
    compile('net.sourceforge.nekohtml:nekohtml:1.9.22')
    compile('commons-codec:commons-codec:1.10')
    compile('org.apache.httpcomponents:httpclient:4.5.2')
    compile('org.apache.commons:commons-lang3:3.1')
    compile('commons-io:commons-io:2.5')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('co.unruly:java-8-matchers:1.4')
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

test {
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
    maxHeapSize "2g"
}


compileJava.dependsOn(wsdl2java)
