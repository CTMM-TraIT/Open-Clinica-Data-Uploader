#
# Session timeout in minutes
#
server.session.timeout=60

#
# The maximal allowed file size for manual uploads
#
multipart.maxFileSize = 10Mb

#
# The server port used if deploying OCDU on an embedded HTTP-server/Servlet-container
#
server.port=8080

#
# The database type used.
#
spring.jpa.database=POSTGRESQL

#
# The database type used.
#
spring.datasource.platform=postgres

#
# Enable/disable logging of SQL statements.
#
spring.jpa.show-sql=false

#
# Controls the creation of the DB-schema on startup. Values are:
#   none, validate, update, create, create-drop
#
#    none: no action taken with the DB-schema
#    validate: validate the schema, makes no changes to the database
#    update: update the schema
#    create: creates the schema, destroying all data.
#    create-drop: destroys / drops the schema at the end of the session
#
#
# >>>   DO NOT USE 'create' OR 'create-drop' ON PRODUCTION DB'S <<<
#
spring.jpa.hibernate.ddl-auto=create

#
# The JDBC-driver to use for database connections
#
spring.database.driverClassName=org.postgresql.Driver

#
# The JDBC-url to use for database connection.
#
spring.datasource.url=jdbc:postgresql://localhost:5432/ocdi

#
# The user name to use for the DB-connection
#
spring.datasource.username=ocdi

#
# The password to use for the DB-connection
#
spring.datasource.password=ocdi

#
# The logging level to use for the web-tier
#
logging.level.org.springframework.web=ERROR

#
# The logging level to use for the DB (hibernate).
#
logging.level.org.hibernate=ERROR

#
# The name of the logging file
#
logging.file=ocdu.log

spring.thymeleaf.mode=LEGACYHTML5
spring.template.cache=false
spring.thymeleaf.cache=false

# The time-out for establishing the SOAP-connection
soap.connection.timeout.in.milliseconds=15000

# Time-out for the SOAP connection until OpenClinica has finished processing the SOAP-request
soap.read.timeout.in.milliseconds=1800000


#
# The CRON-schedule for the autonomous task which picks up files for unattended uploads to OpenClinica instances.
#
autonomous.cron.schedule=1 * * * * *

#
# The directory which is recursively scanned for files by the unattended upload task. Each sub-directory must
# contain a configuration file called 'unattended-config.properties' which specifies the OpenClinica instance to which
# the upload must be performed. These instances must also be present in the application.yml file.
#
autonomous.upload.source.directory=/home/jacob/tomcat/upload/source

#
# The directory to which failed files are copied. This can be used for debugging and audit purposes. See the README.md
# for details on the directory structure
#
autonomous.failed.files.directory=/home/jacob/tomcat/upload/failed

#
# The directory to which files are copied which have been successfully uploaded to an OpenClinica instance. See the
# README.md for details on the directory structure
#
autonomous.completed.files.directory=/home/jacob/tomcat/upload/completed